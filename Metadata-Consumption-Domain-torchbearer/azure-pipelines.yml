# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

parameters:
  - name: browser
    displayName: Browser
    type: string
    default: edge
    values:
      - edge
      - chrome
      - firefox
     

  - name: testGroup
    displayName: Test Group
    type: string
    default: frameworkSanity
    values:
      - frameworkSanity
      - api
      - Integration
      - all

variables:
    - group: torchbearer-python-variable-group
    - name: p_browser
      value: ${{ parameters.browser }}

pool: $(agentPool)



steps:
- task: replacetokens@4
  inputs:
      targetFiles: 'requirements.txt'
      encoding: 'auto'
      tokenPattern: 'azpipelines'
      writeBOM: true
      actionOnMissing: 'warn'
      keepToken: false
      actionOnNoFiles: 'continue'
      enableTransforms: false
      useLegacyPattern: false
      enableTelemetry: true

- script: |
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pip install pytest-metadata==2.0.4
    cd tests/testcases
    python -m pytest -m ${{ parameters.testGroup }} --disable-pytest-warnings
  displayName: 'Executing Testcase(Pytest)'

- task: CopyFiles@2
  displayName: 'Capture Test Result'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)\Outputs\'
    contents: '**/*.pdf'
    targetFolder: $(Build.ArtifactStagingDirectory)
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Test Result'
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: TestResults
  condition: succeededOrFailed()
